Como a visualização de um diff entre duas versões de um arquivo ajuda você a ver o bug que foi introduzido?

	O diff mostra o a diferença dos arquivos por meio da comparação das duas versões, isso facilita o encontro do bug.

Como ter fácil acesso a todo o histórico de um arquivo pode torná-lo um programador mais eficiente no longo prazo?

	Caso após alguma alteração no código venhamos a encontrar um bug, com o histórico fica fácil encontrar e corrigir o erro.

Na sua opinião, quais são os prós e contras de escolher manualmente quando criar um commit, como ocorre no Git, vs o 
salvamento automático de versões, como no Google Docs?

	Pelo meio manual nos tornamos mais livres para decidir o quão relevante foi a mudança para que ela seja salva, podendo 
	até facilitar na a pesquisa de versões passadas, por outro lado, sempre há a possibilidade do usuário se esquecer, podendo
	perder mudanças significativas (tipo quando vc derrota um boss e não tem autosave no jogo).

Por que você acha que alguns sistemas de controle de versão, como o Git, permitem salvar vários arquivos em um commit, 
enquanto outros, como o Google Docs, tratam cada arquivo separadamente?

	Creio que visa a agilidade em realizar mudanças nos arquivos, visto que possibilitar criar apenas um commit para todas
	as alterações. Enquanto separadamente se torna necessário criar um commit para cada arquivo modificado.
	
Como usar os comandos git log e git diff para visualizar o histórico dos arquivos?

	Ao executar o comando git log, teremos informações sobre todas as commits de um arquivo, como autor, data de mudança e
	suas IDs.
	Ao executar git diff seguido por dois IDs do commit, iremos comparar as duas versões commits do arquivo em questão.
	
De que modo o controle de versão pode dar a você mais segurança para fazer alterações que podem danificar algo?

	Possibilitando a verificação de versões anteriores e ainda a comparação das mesmas, então não há o que temer.
	
Agora que você já configurou a sua área de trabalho, você quer usar o Git para quê?

	Possíveis futuros projetos e organização dos trabalhos da faculdade.
	
